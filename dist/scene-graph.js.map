{"version":3,"file":"scene-graph.js","sources":["../lib/uuid.js","../lib/node.js","../lib/utils.js"],"sourcesContent":["\n// REFERENCE: https://gist.github.com/jed/982883\n\nexport default function b(a) {\n  return a           // if the placeholder was passed, return\n    ? (              // a random number from 0 to 15\n      a ^            // unless b is 8,\n      Math.random()  // in which case\n      * 16           // a random number from\n      >> a / 4       // 8 to 11\n    ).toString(16)   // in hexadecimal\n    : (              // or otherwise a concatenated string:\n      [1e7] +        // 10000000 +\n      -1e3 +         // -1000 +\n      -4e3 +         // -4000 +\n      -8e3 +         // -80000000 +\n      -1e11          // -100000000000,\n    ).replace(       // replacing\n      /[018]/g,      // zeroes, ones, and eights with\n      b              // random hex digits\n      );\n}","import {vec3, mat3, mat4, quat} from 'vmath';\nimport uuid from './uuid';\n\nlet v3_a = vec3.create();\nlet q_a = quat.create();\nlet m3_a = mat3.create();\nlet m3_b = mat3.create();\nlet m4_a = mat4.create();\n\nexport default class Node {\n  constructor (name) {\n    this._id = uuid();\n    this._parent = null;\n    this._children = [];\n\n    this.name = name || '';\n    this.lpos = vec3.new(0,0,0);\n    this.lscale = vec3.new(1,1,1);\n    this.lrot = quat.new(0,0,0,1);\n  }\n\n  /**\n   * @property {number} id\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @property parent\n   *\n   * get parent\n   */\n  get parent () {\n    return this._parent;\n  }\n\n  /**\n   * @property children\n   *\n   * get children\n   */\n  get children () {\n    return this._children;\n  }\n\n  // ===============================\n  // utils\n  // ===============================\n\n  /**\n   * @method clone\n   * @param {function} fn\n   * @return {Node}\n   */\n  clone (fn) {\n    let newNode = new Node();\n    newNode.name = this.name;\n    vec3.copy(newNode.lpos, this.lpos);\n    vec3.copy(newNode.lscale, this.lscale);\n    quat.copy(newNode.lrot, this.lrot);\n\n    // do user custom clone function\n    if (fn) {\n      fn(newNode, this);\n    }\n\n    return newNode;\n  }\n\n  /**\n   * @method deepClone\n   * @param {function} fn\n   * @return {Node}\n   */\n  deepClone (fn) {\n    let newNode = this.clone(fn);\n\n    newNode._children = new Array(this._children.length);\n    for (let i = 0; i < this._children.length; ++i) {\n      let child = this._children[i];\n      let newChild = child.deepClone(fn);\n      newNode._children[i] = newChild;\n      newChild._parent = newNode;\n    }\n\n    return newNode;\n  }\n\n  // ===============================\n  // hierarchy\n  // ===============================\n\n  /**\n   * @method setParent\n   * @param {Node} newParent\n   * @return {boolean}\n   */\n  setParent (newParent) {\n    let oldParent = this._parent;\n\n    // newParent is the current parent of this\n    if (oldParent === newParent) {\n      return false;\n    }\n\n    // make sure the newParent is not a child of this\n    let cur = newParent;\n    while (cur) {\n      if (cur === this) {\n        // console.warn(`Failed to set parent for ${this.name}: the new parent ${newParent.name} is its child.`);\n        return false;\n      }\n\n      cur = cur._parent;\n    }\n\n    // remove this from its old parent (if it has)\n    if (oldParent) {\n      let len = oldParent._children.length;\n      for (let i = 0; i < len; ++i) {\n        if (oldParent._children[i] === this) {\n          oldParent._children.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    // append it to the new parent\n    this._parent = newParent;\n    if (newParent) {\n      newParent._children.push(this);\n    }\n\n    return true;\n  }\n\n  /**\n   * @method insertAt\n   * @param {Node} node\n   * @param {number} idx\n   *\n   * Insert `node` before the `idx` of children.\n   */\n  insertAt (idx, node) {\n    if (!node) {\n      return false;\n    }\n\n    // make sure the node is not the parent of this\n    let cur = this;\n    while (cur) {\n      if (cur === node) {\n        // console.warn(`Failed to append ${node.name}: it is the ancient of current node.`);\n        return false;\n      }\n\n      cur = cur._parent;\n    }\n\n    let oldParent = node._parent;\n\n    // 0 <= idx <= len\n    let len = this._children.length;\n    idx = idx < 0 ? 0 : idx > len ? len : idx;\n\n    // remove node from its current parent\n    if (oldParent) {\n      len = oldParent._children.length;\n      for (let i = 0; i < len; ++i) {\n        if (oldParent._children[i] === node) {\n          // if we already have the child\n          if (oldParent === this) {\n            // if its insert position didn't changed, don't do anything.\n            if (i === idx || i === idx - 1) {\n              return false;\n            }\n\n            if (i < idx - 1) {\n              idx = idx - 1;\n            }\n          }\n\n          oldParent._children.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    // append the new node\n    node._parent = this;\n    this._children.splice(idx, 0, node);\n\n    return true;\n  }\n\n  /**\n   * @method append\n   * @param {Node} node\n   * @return {boolean}\n   *\n   * Append `node` at the end of children.\n   */\n  append (node) {\n    if (!node) {\n      return false;\n    }\n\n    // make sure the node is not the parent of this\n    let cur = this;\n    while (cur) {\n      if (cur === node) {\n        // console.warn(`Failed to append ${node.name}: it is the ancient of current node.`);\n        return false;\n      }\n\n      cur = cur._parent;\n    }\n\n    let oldParent = node._parent;\n\n    // remove node from its current parent\n    if (oldParent) {\n      let len = oldParent._children.length;\n      for (let i = 0; i < len; ++i) {\n        if (oldParent._children[i] === node) {\n          // if we already have the child and its insert position didn't changed, don't do anything.\n          if (oldParent === this && i === len-1) {\n            return false;\n          }\n\n          oldParent._children.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    // append the new node\n    node._parent = this;\n    this._children.push(node);\n\n    return true;\n  }\n\n  /**\n   * @method remove\n   *\n   * Remove self from parent\n   */\n  remove () {\n    if (this._parent) {\n      this._parent.removeChild(this);\n    }\n  }\n\n  /**\n   * @method removeChild\n   * @param {Node} node\n   *\n   * Remove child\n   */\n  removeChild (node) {\n    let len = this._children.length;\n\n    for (let i = 0; i < len; ++i ) {\n      if (this._children[i] === node) {\n        this._children.splice(i,1);\n        node._parent = null;\n\n        return true;\n      }\n    }\n\n    // console.warn(`Failed to remove node ${node.name}, can not find it.`);\n    return false;\n  }\n\n  // ===============================\n  // transform\n  // ===============================\n\n  /**\n   * @method getWorldPos\n   * @param {vec3} out\n   * @return {vec3}\n   *\n   * Calculate and return world position\n   */\n  getWorldPos (out) {\n    vec3.copy(out, this.lpos);\n\n    let cur = this._parent;\n    while (cur) {\n      // out = parent_lscale * lpos\n      vec3.mul(out, out, cur.lscale);\n\n      // out = parent_lrot * out\n      vec3.transformQuat(out, out, cur.lrot);\n\n      // out = out + lpos\n      vec3.add(out, out, cur.lpos);\n\n      cur = cur._parent;\n    }\n\n    return out;\n  }\n\n  /**\n   * @method setWorldPos\n   * @param {vec3} pos\n   *\n   * Set world position\n   */\n  setWorldPos (pos) {\n    // NOTE: this is faster than invert world matrix and transform the point\n\n    if (this._parent) {\n      this._parent.invTransformPoint(this.lpos, pos);\n      return;\n    }\n\n    vec3.copy(this.lpos, pos);\n  }\n\n  /**\n   * @method getWorldRot\n   * @param {quat} out\n   * @return {quat}\n   *\n   * Calculate and return world rotation\n   */\n  getWorldRot (out) {\n    quat.copy(out, this.lrot);\n\n    // result = ... * parent.parent.lrot * parent.lrot * lrot\n    let cur = this._parent;\n    while (cur) {\n      quat.mul(out, cur.lrot, out);\n\n      cur = cur._parent;\n    }\n\n    return out;\n  }\n\n  /**\n   * @method setWorldRot\n   * @param {quat} rot\n   *\n   * Set world position\n   */\n  setWorldRot (rot) {\n    // lrot = rot * inv(prarent.wrot);\n    if (this._parent) {\n      this._parent.getWorldRot(this.lrot);\n      quat.conjugate(this.lrot, this.lrot);\n      quat.mul(this.lrot, this.lrot, rot);\n\n      return;\n    }\n\n    quat.copy(this.lrot, rot);\n  }\n\n  /**\n   * @method getWorldScale\n   * @param {quat} out\n   * @return {quat}\n   *\n   * Calculate and return world rotation\n   */\n  getWorldScale (out) {\n    // invRot = inv(world_rot)\n    this.getWorldRot(q_a);\n    quat.conjugate(q_a, q_a);\n    mat3.fromQuat(out, q_a);\n\n    // worldRotScale\n    this._getWorldRS(m3_a);\n\n    // invRot * worldRotScale\n    mat3.mul(out, out, m3_a);\n\n    return out;\n  }\n\n  /**\n   * @method invTransformPoint\n   * @param {vec3} out\n   * @param {vec3} vec3\n   *\n   * Transforms position from world space to local space.\n   */\n  invTransformPoint (out, pos) {\n    if (this._parent) {\n      this._parent.invTransformPoint(out, pos);\n    } else {\n      vec3.copy(out, pos);\n    }\n\n    // out = parent_inv_pos - lpos\n    vec3.sub(out, out, this.lpos);\n\n    // out = inv(lrot) * out\n    quat.conjugate(q_a, this.lrot);\n    vec3.transformQuat(out, out, q_a);\n\n    // out = (1/scale) * out\n    vec3.inverseSafe(v3_a, this.lscale);\n    vec3.mul(out, out, v3_a);\n\n    return out;\n  }\n\n  /**\n   * @method getLocalMatrix\n   * @param {mat4} out\n   * @return {mat4}\n   *\n   * Calculate and return local transform\n   */\n  getLocalMatrix (out) {\n    mat4.fromRTS(out, this.lrot, this.lpos, this.lscale);\n    return out;\n  }\n\n  /**\n   * @method getWorldMatrix\n   * @param {mat4} out\n   * @return {mat4}\n   *\n   * Calculate and return world transform\n   */\n  getWorldMatrix (out) {\n    // out = ... * parent.parent.local * parent.local * local;\n    this.getLocalMatrix(out);\n\n    let cur = this._parent;\n    while (cur) {\n      cur.getLocalMatrix(m4_a);\n      mat4.mul(out, m4_a, out);\n\n      cur = cur._parent;\n    }\n\n    return out;\n  }\n\n  /**\n   * @method getWorldRT\n   * @param {mat4} out\n   * @return {mat4}\n   *\n   * Calculate and return world transform without scale\n   */\n  _getWorldRT (out) {\n    this._getWorldPosAndRot(v3_a, q_a);\n    mat4.fromRT(out, q_a, v3_a);\n\n    return out;\n  }\n\n  /**\n   * @method _getWorldRS\n   * @param {mat3} out\n   *\n   * Calculate and return world rotation and scale matrix\n   */\n  _getWorldRS (out) {\n    mat3.set(m3_a,\n      this.lscale.x, 0, 0,\n      0, this.lscale.y, 0,\n      0, 0, this.lscale.z\n    );\n    mat3.fromQuat(m3_b, this.lrot);\n\n    if (this._parent) {\n      // parent_RS * rot * scale\n      this._parent._getWorldRS(out);\n      mat3.mul(out, out, m3_b);\n      mat3.mul(out, out, m3_a);\n    } else {\n      // rot * scale\n      mat3.mul(out, m3_b, m3_a);\n    }\n\n    return out;\n  }\n\n  /**\n   * @method _getWorldPosAndRot\n   * @param {vec3} opos\n   * @param {vec3} orot\n   *\n   * Calculate and return world position\n   */\n  _getWorldPosAndRot (opos, orot) {\n    vec3.copy(opos, this.lpos);\n    quat.copy(orot, this.lrot);\n\n    let cur = this._parent;\n    while (cur) {\n      // opos = parent_lscale * lpos\n      vec3.mul(opos, opos, cur.lscale);\n\n      // opos = parent_lrot * opos\n      vec3.transformQuat(opos, opos, cur.lrot);\n\n      // opos = opos + lpos\n      vec3.add(opos, opos, cur.lpos);\n\n      // orot = lrot * orot\n      quat.mul(orot, cur.lrot, orot);\n\n      cur = cur._parent;\n    }\n  }\n}","/**\n * @method walk\n * @param {Node} node\n * @param {function} fn\n * @param {Node} fn.node\n * @param {Node} fn.parent\n */\nfunction walk(node, fn) {\n  node.children.forEach(child => {\n    fn(child, node);\n    walk(child, fn);\n  });\n}\n\n/**\n * @method flat\n * @param {Node} node\n */\nfunction flat(node) {\n  let out = [];\n\n  out.push(node);\n  walk(node, iter => {\n    out.push(iter);\n  });\n\n  return out;\n}\n\n/**\n * @method replace\n * @param {Node} oldNode\n * @param {Node} newNode\n */\nfunction replace(oldNode, newNode) {\n  newNode.remove();\n\n  let parent = oldNode._parent;\n  if (!parent) {\n    return;\n  }\n\n  oldNode._parent = null;\n  newNode._parent = parent;\n\n  let len = parent._children.length;\n  for (let i = 0; i < len; ++i) {\n    if (parent._children[i] === oldNode) {\n      parent._children[i] = newNode;\n      return;\n    }\n  }\n}\n\nlet utils = {\n  walk,\n  flat,\n  replace,\n};\nexport default utils;"],"names":["vec3","quat","mat3","mat4","uuid"],"mappings":";;;;;;;;;;;;;AACA;;AAEA,AAAe,SAAS,CAAC,CAAC,CAAC,EAAE;EAC3B,OAAO,CAAC;MACJ;MACA,CAAC;MACD,IAAI,CAAC,MAAM,EAAE;QACX,EAAE;SACD,CAAC,GAAG,CAAC;MACR,QAAQ,CAAC,EAAE,CAAC;MACZ;MACA,CAAC,GAAG,CAAC;MACL,CAAC,GAAG;MACJ,CAAC,GAAG;MACJ,CAAC,GAAG;MACJ,CAAC,IAAI;MACL,OAAO;MACP,QAAQ;MACR,CAAC;OACA,CAAC;;;ACjBR,IAAI,IAAI,GAAGA,UAAI,CAAC,MAAM,EAAE,CAAC;AACzB,IAAI,GAAG,GAAGC,UAAI,CAAC,MAAM,EAAE,CAAC;AACxB,IAAI,IAAI,GAAGC,UAAI,CAAC,MAAM,EAAE,CAAC;AACzB,IAAI,IAAI,GAAGA,UAAI,CAAC,MAAM,EAAE,CAAC;AACzB,IAAI,IAAI,GAAGC,UAAI,CAAC,MAAM,EAAE,CAAC;;AAEzB,AAAe,MAAM,IAAI,CAAC;EACxB,WAAW,CAAC,CAAC,IAAI,EAAE;IACjB,IAAI,CAAC,GAAG,GAAGC,CAAI,EAAE,CAAC;IAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACpB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;;IAEpB,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;IACvB,IAAI,CAAC,IAAI,GAAGJ,UAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5B,IAAI,CAAC,MAAM,GAAGA,UAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,IAAI,CAAC,IAAI,GAAGC,UAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;GAC/B;;;;;EAKD,IAAI,EAAE,CAAC,GAAG;IACR,OAAO,IAAI,CAAC,GAAG,CAAC;GACjB;;;;;;;EAOD,IAAI,MAAM,CAAC,GAAG;IACZ,OAAO,IAAI,CAAC,OAAO,CAAC;GACrB;;;;;;;EAOD,IAAI,QAAQ,CAAC,GAAG;IACd,OAAO,IAAI,CAAC,SAAS,CAAC;GACvB;;;;;;;;;;;EAWD,KAAK,CAAC,CAAC,EAAE,EAAE;IACT,IAAI,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;IACzB,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACzBD,UAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IACnCA,UAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACvCC,UAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;;;IAGnC,IAAI,EAAE,EAAE;MACN,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;KACnB;;IAED,OAAO,OAAO,CAAC;GAChB;;;;;;;EAOD,SAAS,CAAC,CAAC,EAAE,EAAE;IACb,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;;IAE7B,OAAO,CAAC,SAAS,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IACrD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;MAC9C,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;MAC9B,IAAI,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;MACnC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC;MAChC,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC;KAC5B;;IAED,OAAO,OAAO,CAAC;GAChB;;;;;;;;;;;EAWD,SAAS,CAAC,CAAC,SAAS,EAAE;IACpB,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;;;IAG7B,IAAI,SAAS,KAAK,SAAS,EAAE;MAC3B,OAAO,KAAK,CAAC;KACd;;;IAGD,IAAI,GAAG,GAAG,SAAS,CAAC;IACpB,OAAO,GAAG,EAAE;MACV,IAAI,GAAG,KAAK,IAAI,EAAE;;QAEhB,OAAO,KAAK,CAAC;OACd;;MAED,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC;KACnB;;;IAGD,IAAI,SAAS,EAAE;MACb,IAAI,GAAG,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC;MACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;QAC5B,IAAI,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;UACnC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UACjC,MAAM;SACP;OACF;KACF;;;IAGD,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;IACzB,IAAI,SAAS,EAAE;MACb,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAChC;;IAED,OAAO,IAAI,CAAC;GACb;;;;;;;;;EASD,QAAQ,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE;IACnB,IAAI,CAAC,IAAI,EAAE;MACT,OAAO,KAAK,CAAC;KACd;;;IAGD,IAAI,GAAG,GAAG,IAAI,CAAC;IACf,OAAO,GAAG,EAAE;MACV,IAAI,GAAG,KAAK,IAAI,EAAE;;QAEhB,OAAO,KAAK,CAAC;OACd;;MAED,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC;KACnB;;IAED,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;;;IAG7B,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;IAChC,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;;;IAG1C,IAAI,SAAS,EAAE;MACb,GAAG,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC;MACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;QAC5B,IAAI,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;;UAEnC,IAAI,SAAS,KAAK,IAAI,EAAE;;YAEtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,EAAE;cAC9B,OAAO,KAAK,CAAC;aACd;;YAED,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE;cACf,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;aACf;WACF;;UAED,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UACjC,MAAM;SACP;OACF;KACF;;;IAGD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACpB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;;IAEpC,OAAO,IAAI,CAAC;GACb;;;;;;;;;EASD,MAAM,CAAC,CAAC,IAAI,EAAE;IACZ,IAAI,CAAC,IAAI,EAAE;MACT,OAAO,KAAK,CAAC;KACd;;;IAGD,IAAI,GAAG,GAAG,IAAI,CAAC;IACf,OAAO,GAAG,EAAE;MACV,IAAI,GAAG,KAAK,IAAI,EAAE;;QAEhB,OAAO,KAAK,CAAC;OACd;;MAED,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC;KACnB;;IAED,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;;;IAG7B,IAAI,SAAS,EAAE;MACb,IAAI,GAAG,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC;MACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;QAC5B,IAAI,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;;UAEnC,IAAI,SAAS,KAAK,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE;YACrC,OAAO,KAAK,CAAC;WACd;;UAED,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UACjC,MAAM;SACP;OACF;KACF;;;IAGD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACpB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;IAE1B,OAAO,IAAI,CAAC;GACb;;;;;;;EAOD,MAAM,CAAC,GAAG;IACR,IAAI,IAAI,CAAC,OAAO,EAAE;MAChB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;KAChC;GACF;;;;;;;;EAQD,WAAW,CAAC,CAAC,IAAI,EAAE;IACjB,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;;IAEhC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,GAAG;MAC7B,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;QAC9B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;;QAEpB,OAAO,IAAI,CAAC;OACb;KACF;;;IAGD,OAAO,KAAK,CAAC;GACd;;;;;;;;;;;;;EAaD,WAAW,CAAC,CAAC,GAAG,EAAE;IAChBD,UAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;;IAE1B,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;IACvB,OAAO,GAAG,EAAE;;MAEVA,UAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;;;MAG/BA,UAAI,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;;;MAGvCA,UAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;;MAE7B,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC;KACnB;;IAED,OAAO,GAAG,CAAC;GACZ;;;;;;;;EAQD,WAAW,CAAC,CAAC,GAAG,EAAE;;;IAGhB,IAAI,IAAI,CAAC,OAAO,EAAE;MAChB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;MAC/C,OAAO;KACR;;IAEDA,UAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;GAC3B;;;;;;;;;EASD,WAAW,CAAC,CAAC,GAAG,EAAE;IAChBC,UAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;;;IAG1B,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;IACvB,OAAO,GAAG,EAAE;MACVA,UAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;;MAE7B,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC;KACnB;;IAED,OAAO,GAAG,CAAC;GACZ;;;;;;;;EAQD,WAAW,CAAC,CAAC,GAAG,EAAE;;IAEhB,IAAI,IAAI,CAAC,OAAO,EAAE;MAChB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MACpCA,UAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;MACrCA,UAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;;MAEpC,OAAO;KACR;;IAEDA,UAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;GAC3B;;;;;;;;;EASD,aAAa,CAAC,CAAC,GAAG,EAAE;;IAElB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IACtBA,UAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACzBC,UAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;;;IAGxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;;;IAGvBA,UAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;;IAEzB,OAAO,GAAG,CAAC;GACZ;;;;;;;;;EASD,iBAAiB,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE;IAC3B,IAAI,IAAI,CAAC,OAAO,EAAE;MAChB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;KAC1C,MAAM;MACLF,UAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;KACrB;;;IAGDA,UAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;;;IAG9BC,UAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/BD,UAAI,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;;;IAGlCA,UAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACpCA,UAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;;IAEzB,OAAO,GAAG,CAAC;GACZ;;;;;;;;;EASD,cAAc,CAAC,CAAC,GAAG,EAAE;IACnBG,UAAI,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACrD,OAAO,GAAG,CAAC;GACZ;;;;;;;;;EASD,cAAc,CAAC,CAAC,GAAG,EAAE;;IAEnB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;;IAEzB,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;IACvB,OAAO,GAAG,EAAE;MACV,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;MACzBA,UAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;;MAEzB,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC;KACnB;;IAED,OAAO,GAAG,CAAC;GACZ;;;;;;;;;EASD,WAAW,CAAC,CAAC,GAAG,EAAE;IAChB,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IACnCA,UAAI,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;;IAE5B,OAAO,GAAG,CAAC;GACZ;;;;;;;;EAQD,WAAW,CAAC,CAAC,GAAG,EAAE;IAChBD,UAAI,CAAC,GAAG,CAAC,IAAI;MACX,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;MACnB,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;MACnB,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KACpB,CAAC;IACFA,UAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;;IAE/B,IAAI,IAAI,CAAC,OAAO,EAAE;;MAEhB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;MAC9BA,UAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;MACzBA,UAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KAC1B,MAAM;;MAELA,UAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;KAC3B;;IAED,OAAO,GAAG,CAAC;GACZ;;;;;;;;;EASD,kBAAkB,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE;IAC9BF,UAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3BC,UAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;;IAE3B,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;IACvB,OAAO,GAAG,EAAE;;MAEVD,UAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;;;MAGjCA,UAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;;;MAGzCA,UAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;;;MAG/BC,UAAI,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;MAE/B,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC;KACnB;GACF;;;ACrgBH;;;;;;;AAOA,SAAS,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE;EACtB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,IAAI;IAC7B,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAChB,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;GACjB,CAAC,CAAC;CACJ;;;;;;AAMD,SAAS,IAAI,CAAC,IAAI,EAAE;EAClB,IAAI,GAAG,GAAG,EAAE,CAAC;;EAEb,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACf,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI;IACjB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GAChB,CAAC,CAAC;;EAEH,OAAO,GAAG,CAAC;CACZ;;;;;;;AAOD,SAAS,OAAO,CAAC,OAAO,EAAE,OAAO,EAAE;EACjC,OAAO,CAAC,MAAM,EAAE,CAAC;;EAEjB,IAAI,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC;EAC7B,IAAI,CAAC,MAAM,EAAE;IACX,OAAO;GACR;;EAED,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;EACvB,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC;;EAEzB,IAAI,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC;EAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;IAC5B,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;MACnC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;MAC9B,OAAO;KACR;GACF;CACF;;AAED,IAAI,KAAK,GAAG;EACV,IAAI;EACJ,IAAI;EACJ,OAAO;CACR,CAAC,AACF,;;;"}